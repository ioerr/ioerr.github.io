<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>升级 on 读写错误</title>
    <link>https://ioerr.github.io/tags/%E5%8D%87%E7%BA%A7/</link>
    <description>Recent content in 升级 on 读写错误</description>
    <generator>Hugo -- 0.126.0</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 17 Nov 2007 16:39:47 +0000</lastBuildDate>
    <atom:link href="https://ioerr.github.io/tags/%E5%8D%87%E7%BA%A7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何更好地改版升级</title>
      <link>https://ioerr.github.io/posts/ruhe-genghaode-gaiban-shengji/</link>
      <pubDate>Sat, 17 Nov 2007 16:39:47 +0000</pubDate>
      <guid>https://ioerr.github.io/posts/ruhe-genghaode-gaiban-shengji/</guid>
      <description>豆瓣改版的争吵仍在继续，主体已经变味成了“精英主义”和“垃圾用户”的争论，还有没营养的签名抗议。 不管怎么说，这次升级都已经称不上完美，“往者</description>
      <content:encoded><![CDATA[<p>豆瓣改版的争吵仍在继续，主体已经变味成了“精英主义”和“垃圾用户”的争论，还有没营养的签名抗议。<br>
不管怎么说，这次升级都已经称不上完美，“往者不可谏，来者犹可追”，还是来说说其他网站吸取豆瓣的教训后，今后升级时能够在改版升级之前做什么准备。</p>
<p>1、新版本试运行一段时间，进行公开测试<br>
虽然豆瓣召集了一批“核心用户”进行了内部测试，但现在看来，也许保密工作还是做得太好而抽样工作勉勉强强。虽然我赞同这次的改版，但猛地看到新版本的界面，还是花了一段时间才适应，换作那些在老界面中驾轻就熟的用户，可能转变的过程会更加痛苦。<br>
所以不妨先推出一个公开测试的版本，一来是明确地告诉用户，网站肯定会要升级，二来，重度用户自然会积极参与测试，这本身就是一个筛选不同层次用户的过程，三则给了用户适应和自身调整的时间。<br>
这方面可以学习的例子有一直酝酿升级的<br>
<a href="http://del.icio.us/">Del.icio.us</a>，虽然<a href="http://preview.delicious.com/">预览版本</a>不是完全开放的，但还是很容易申请到测试邀请。</p>
<p>2、提供新老版本切换功能<br>
最好的例子自然是 Google 了，<a href="http://mail.google.com/mail">Gmail</a>、Reader<br>
等在升级后都提供切换回老版本的链接，麻烦是麻烦，但升级过程中的用户抱怨却可以降到最低。</p>
<p>3、偷偷下手，从量变到质变的微调<br>
据说 eBay<br>
当年改底色引起用户强烈不满，只好先改回来，然后每天改一点点颜色才慢慢过渡成功。如今的改版不至于这么如履薄冰，但若升级的内容允许分步进行，慢慢调整，当然也是个不错的选项。</p>
<p>4、模块化的自主升级<br>
最后这一种比较上等，并非都有条件实现。那就是网站的界面和功能完全是模块化的、可方便地自定义的。所谓升级，不过相当于站点方提供给用户新的地基、砖头和涂料（接口、功能模块和外观选项），网站推荐宣传过后，用户若是爱用就可以自己搭建好，若是不爱用也没关系，不管它就好，说不定哪天看到好友用得爽快也就乐意用上了。</p>
<p>5、心狠手辣型<br>
召集所有反对新版本的用户开会商量，然后统统拖出去毙了，从此万事大吉，末了还要学威震天来一句，“我得不到的用户，谁也别想得到！”</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
