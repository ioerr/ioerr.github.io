<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>主题 on 读写错误</title>
    <link>https://ioerr.github.io/tags/%E4%B8%BB%E9%A2%98/</link>
    <description>Recent content in 主题 on 读写错误</description>
    <generator>Hugo -- 0.126.0</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 19 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ioerr.github.io/tags/%E4%B8%BB%E9%A2%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>更换 Hugo 主题</title>
      <link>https://ioerr.github.io/posts/genghuan-hugo-zhuti/</link>
      <pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate>
      <guid>https://ioerr.github.io/posts/genghuan-hugo-zhuti/</guid>
      <description>一时手痒，将自己修改后用了好几年的 Simplicity 主题，改为了 PaperMod。 同时将 Hugo 程序也升级到了最新版本。 本来是为了实现自带站内搜索功能，而不依赖于</description>
      <content:encoded><![CDATA[<p>一时手痒，将自己修改后用了好几年的 <a href="https://github.com/eshlox/simplicity">Simplicity</a> 主题，改为了 <a href="https://github.com/adityatelange/hugo-PaperMod/">PaperMod</a>。<br>
同时将 <a href="https://gohugo.io/">Hugo</a> 程序也升级到了最新版本。</p>
<p>本来是为了实现自带站内搜索功能，而不依赖于 <a href="https://programmablesearchengine.google.com/">Programmable Search Engine</a>。<br>
结果升级和更换主题后，发现一堆设置要改，许多自定义的东西要从头来，且做个记录。</p>
<p>首先是配置站内搜索，参照主题的帮助文档和示例配置来就行。</p>
<p>然后是首页风格，从文章列表式改成了简介首页式的。</p>
<p>页眉的链接通过配置修改。</p>
<p>变更了默认字体以及微调字体大小——之前的主题调整 CSS 花了不少时间，现在懒了。</p>
<p>改了网站的副标题：To Input and Output Error is Human.</p>
<p>发现新版本的 Hugo 仍然默认 markdown 格式不使用硬回车（hard line break）。<br>
老版本用的 blackfriday 插件，新版本默认用 goldmark，又要改配置（hardWraps）。</p>
<p>发现新版本的 Hugo 图片资源相对链接变了，历史文章中展示的本地图片全部失效…<br>
于是又摸索着调整了图片资源目录，以及修改了历史文章中的图片地址。</p>
<p>RSS 默认不输出全文，修改 RSS 模板配置。<br>
不过自从由 <a href="https://www.inoreader.com/">Inoreader</a> 切换回本地 RSS 阅读器（<a href="https://github.com/martinrotter/rssguard">RSS Guard</a>），并且针对不同类型的订阅源分别设置是否自动打开原文后，订阅源是否输出全文似乎也没那么重要了。对那些看重访问量、精心设计了页面的 blogger 倒是好事。</p>
<p>发现新主题默认不启用项目和文章分类，于是增加项目页面，插入分类代码，并且调整为看上去和标签（tag）并列。</p>
<p>调整日期格式，改为自己更习惯的格式。</p>
<p>修改生成站点时指定的默认输出目录。</p>
<p>修改新建文章时的默认模板，改回自己更习惯的格式。</p>
<p>关闭了主题自带的黑暗模式。</p>
<p>增加文章大纲功能。</p>
<p>重新配置 Giscus 评论系统、各种统计脚本。</p>
<p>迁移 favicon、logo 等静态资源。</p>
<p>暂时应该没有非改不可的东西了，如果发现有什么不对劲的地方，欢迎留言、来信提醒。</p>
]]></content:encoded>
    </item>
    <item>
      <title>从 WordPress 迁移到 Hugo</title>
      <link>https://ioerr.github.io/posts/cong-wordpress-qianyi-dao-hugo/</link>
      <pubDate>Tue, 17 Jan 2017 17:32:36 +0800</pubDate>
      <guid>https://ioerr.github.io/posts/cong-wordpress-qianyi-dao-hugo/</guid>
      <description>虽然在 Weblogs.us 驻留了很久，但不免还是担心万一有一天停止提供这么好的服务了，要如何快速迁移网站。 而且最近几年用静态网站写 blog 的风潮越来越流行，总想着可</description>
      <content:encoded><![CDATA[<p>虽然在 Weblogs.us 驻留了很久，但不免还是担心万一有一天停止提供这么好的服务了，要如何快速迁移网站。<br>
而且最近几年用静态网站写 blog 的风潮越来越流行，总想着可以尝试一把。\</p>
<p>最开始是考察了最流行基于 Ruby 的 Jekyll 和 Octopress，然后是基于 Python 的 Pelican 和基于 node.js 的 Hexo。<br>
选择很多，主题也很丰富，然而实在不喜欢脚本语言折腾安装部署环境的操作。<br>
就算已经安装了环境，还要考虑更换电脑之后如何重新配置，或者做绿色便携改造。<br>
而且站点生成效率也是重要的考量因素。</p>
<p>因此最后决定尝试基于 Golang 的 Hugo。<br>
只是没想到一趟折腾下来的坑也不少，这里做个记录，方便有需求者少走弯路。</p>
<ul>
<li>安装 Hugo</li>
</ul>
<p>在 <a href="https://github.com/spf13/hugo/releases">Hugo 的 Github 发布页面</a>直接下载安装包或自己编译就行。</p>
<ul>
<li>导出和转换 WordPress 的内容</li>
</ul>
<p>如果你运气够好，可以安装直接导入的插件：<a href="https://github.com/SchumacherFM/wordpress-to-hugo-exporter">wordpress-to-hugo-exporter </a>。<br>
然后从 WordPress 的管理面板 Tool 菜单中直接导出可以用于 Hugo 的内容。\</p>
<p>或者也可以用 <a href="https://github.com/SenjinDarashiva/JekyllToHugo">JekyllToHugo</a> 加 <a href="https://github.com/coderzh/ConvertToHugo">ConvertToHugo</a> 的组合搞定。\</p>
<p>然而悲剧的是，Weblogs.us 可以安装以上插件，却在导出时报权限不足：failed to open dir: Permission denied <br>
推测与 Weblogs.us 的服务器设置有关，不想麻烦服务方帮忙，于是只能另想办法。</p>
<p>最终还是用 WordPress 自带的导出功能，导出所有内容的 XML 文件。<br>
然后结合 Python 脚本 <a href="https://github.com/thomasf/exitwp">Exitwp</a> 转换为 Jekyll 适用的内容。<br>
注意，Exitwp 我是在 Ubuntu 下安装使用的，具体参考作者的文档。<br>
如果遇到解析出错的情况，比如我遇到无法正确处理包含以下内容的部分：<br>
<code>&lt;atom:link rel=&quot;hub&quot; href=&quot;http://pubsubhubbub.appspot.com&quot;/&gt;&lt;atom:link rel=&quot;hub&quot; href=&quot;http://pubsubhubbub.superfeedr.com&quot;/&gt;</code><br>
直接删除再试就可以了。\</p>
<ul>
<li>折腾 Markdown 内容</li>
</ul>
<p>Markdown 格式默认不支持硬换行特性，也就是说，如果你在 WordPress 写文章时喜欢用换行而不是段落，那么转换为 Markdown 格式后虽然保留了换行，但转换为 HTML 展现出来的是不换行的结果，原来的换行之间替换为了空格，原来的多行内容挤在了一行。（之前有过<a href="../pandoc-markdown">吐槽</a>）</p>
<p>虽然可以用 Pandoc 批量转换，但Pandoc 在转换为 Markdown 格式时会在下划线前增加反斜线。<br>
而导出的 WordPress XML 中包含有文章的 slug 地址，像我就在 slug 中统一使用下划线代替空格分隔单词和词组拼音。<br>
于是，这就导致转换后的 slug 地址不正确。<br>
只好祭出 sed 做批量调整，在包含有指定字符串的一行中将下划线替换为短横线连字号：</p>
<pre tabindex="0"><code>sed -i &#34;/slug:/s/_/-/g&#34; *.markdown
sed -i &#34;/link:/s/_/-/g&#34; *.markdown
</code></pre><p>然后再写个 shell 脚本搞定 Pandoc 批量转换：</p>
<pre tabindex="0"><code>FILES=*.markdown
for f in $FILES
do
  filename=&#34;${f%.*}&#34;
  `pandoc -s -f markdown+hard_line_breaks $f -t markdown -o $filename.markdown`
done
</code></pre><p>转换完之后，发现 Pandoc 将 Jekyll 导入文件头部的 YAML 格式部分的 <code>---</code> 替换成了 <code>...</code>，这会导致 Hugo 解析出错。<br>
于是再用 sed 改回来：</p>
<pre tabindex="0"><code>sed -i &#34;s/^...$/---/g&#34; *.markdown
</code></pre><ul>
<li>选择 Hugo 模板</li>
</ul>
<p>Hugo 官方站点有少量<a href="http://themes.gohugo.io/">模板演示</a>，不少是从 Jekyll 的模板改的。<br>
美观的模板有不少，但要找到既好看又符合功能需求的就比较困难了。\</p>
<p>比如我的要求是：</p>
<ol>
<li>简洁风格；</li>
<li>支持翻页；</li>
<li>支持类别（category）展示；</li>
<li>支持响应式布局优先；</li>
<li>支持标签（tag）优先；</li>
<li>单栏布局优先；</li>
<li>方便自定义修改。</li>
</ol>
<p>尝试了多个主题之后，最终决定使用这款<a href="http://themes.gohugo.io/hugo-hello-programmer-theme/">Hello Programmer</a>。<br>
默认支持类别、标签、翻页，单栏布局。<br>
使用的主页图片和 favicon 则需要自己绘制。</p>
<ul>
<li>发布到 Github Pages</li>
</ul>
<p>因为一切以偷懒为目标，所以为了减少麻烦，申请的是用户或组织模式的 Github Pages。<br>
操作步骤参考<a href="https://pages.github.com/">官方文档</a>就成。</p>
<p>然而，因为主题中引用了 Font Awesome 字体，在默认限制 icon font 跨域访问的 Firefox 下会报错：<br>
<code>已阻止交叉源请求：同源策略不允许读取...上的远程资源。可以将资源移动到相同的域名上或者启用 CORS 来解决这个问题。</code></p>
<p>最省事的方法，就是将网络字体下载下来，合并在主题中，同时更改 CSS 中相应的地址为本地相对地址。</p>
<p>一切就绪之后，用 Hugo 命令生成静态网页。<br>
像这个 blog 有1000多篇文章，900多个标签，15个类别，生成的静态网站体积也有好几十 MB…<br>
说实话，体积这么大，小文件又多，提交、拉取和通过网盘同步备份还是挺不爽的。<br>
好在有 Golang 加持，生成的效率超高，生成时间只有1、2秒左右。</p>
<p>最后，使用 Github Pages 的话，RSS 订阅地址也变成了 <a href="https://ioerr.github.io/index.xml">https://ioerr.github.io/index.xml</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Minimore</title>
      <link>https://ioerr.github.io/posts/minimore/</link>
      <pubDate>Fri, 02 Aug 2013 17:10:16 +0000</pubDate>
      <guid>https://ioerr.github.io/posts/minimore/</guid>
      <description>抽空改了个极简风格的主题 mnmlist。 原主题：mnmlist v1 原作者： Leo Babauta 原作者地址： http://mnmlist.com 原作主题地址： http://mnmlist.com/theme 修改主题：minimore 修改者：</description>
      <content:encoded><![CDATA[<p>抽空改了个极简风格的主题 <a href="http://mnmlist.com/theme">mnmlist</a>。</p>
<p>原主题：mnmlist v1<br>
原作者： Leo Babauta<br>
原作者地址： <a href="http://mnmlist.com">http://mnmlist.com</a><br>
原作主题地址： <a href="http://mnmlist.com/theme">http://mnmlist.com/theme</a></p>
<p>修改主题：minimore<br>
修改者：Calon<br>
修改者blog地址：http://calon.weblogs.us/<br>
修改主题地址：http://calon.weblogs.us/minimore</p>
<p>原作主题 mnmlist 以突出内容的最精简主题为目标，没有 widgets 小工具，没有评论，没有搜索功能，没有可以动态调整的侧栏，等等。</p>
<p>因为第三版太激进，所以我选择第一版为改造对象。<br>
我的目标是最大程度去除各种装饰，突出内容，改造成适合自己的风格，但不必精简到影响作者和读者的使用，于是我还是将原作去除的各类功能加回来了（所以名字带个 more），而且没有采用固定宽度。<br>
如果不想要这些功能的话，直接上原主题或自己改造就好。</p>
<p>Blockquote 的风格是借鉴 Medium 的。<br>
Font-family 采用优先雅黑和 Arial，最终回落到非衬线字体的方案，在保证基本可读性的基础上，最大程度尊重各操作系统用户指定字体的自由。如果对雅黑不满意，就在浏览器中指定最合适自己的非衬线字体吧。</p>
<p>因为我自己是用 Disqus 评论系统，所以没充分测试评论功能，有问题请留言反馈。我暂时禁用 Disqus 插件是可以正常显示的。</p>
<p>为了能够通过验证上传到 WordPress 主题站，不得不忍痛增加了一些内容……</p>
<p>不算说明文档和截图的话，整个主题共10个文件，11.3KB大小。</p>
<p>安装说明<br>
将文件夹上传到 wp-content/themes/ 文件夹下，在 WordPress 管理后台的主题板块中激活即可。</p>
<p>版权声明<br>
原主题声明无版权（uncopyrighted），复制、分发、修改都无需先获得原作者认可，修改者可以自己指定新的版权协议（这也是我选择修改和使用这款主题的原因）。<br>
那我也指定使用 <a href="http://www.wtfpl.net/">WTFPL</a>（Do What The Fuck You Want To Public License，你他妈的想干嘛就干嘛公共许可证 ）好了，借用 twenty-thirteen 主题的 comments.php 除外。</p>
<p>效果截图：<br>
<a href="http://s111.photobucket.com/user/calon_plus/media/screenshot_small-1.png.html"><img loading="lazy" src="http://i111.photobucket.com/albums/n154/calon_plus/screenshot_small-1.png" alt="photo screenshot_small-1.png"  />
</a></p>
<p>下载地址：<br>
<a href="https://app.box.com/s/45domoq1nf2rrdf03wmx">Box</a><br>
<a href="https://github.com/calon/minimore/archive/master.zip">GitHub</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>推荐 Firefox 扩展与主题</title>
      <link>https://ioerr.github.io/posts/tuijian-firefox-kuozhan-yu-zhuti/</link>
      <pubDate>Mon, 06 Mar 2006 15:17:06 +0000</pubDate>
      <guid>https://ioerr.github.io/posts/tuijian-firefox-kuozhan-yu-zhuti/</guid>
      <description>扩展 加粗的扩展和主题是目前正在使用的。 2016年5月21日更新： Beyond Australis 在 Australis 主题基础上进一步优化。例如： 进一步精简顶部工具栏； 隐藏书签工具栏，鼠</description>
      <content:encoded><![CDATA[<p><strong>扩展</strong></p>
<p>加粗的扩展和主题是目前正在使用的。</p>
<p>2016年5月21日更新：</p>
<p><a href="https://addons.mozilla.org/zh-CN/firefox/addon/the-fox-only-better/"><strong>Beyond<br>
Australis</strong></a></p>
<p>在 Australis 主题基础上进一步优化。例如：<br>
进一步精简顶部工具栏；<br>
隐藏书签工具栏，鼠标移上去才显示；<br>
智能地址栏集成搜索功能，并自定义显示提示信息；<br>
有很新颖的天窗功能，精简书签、网站身份信息界面。</p>
<p><a href="https://addons.mozilla.org/zh-CN/firefox/addon/download-status-bar/"><strong>Download Status<br>
Bar</strong></a></p>
<p>之前的 Download Status Bar 不支持新界面，而新版本不但兼容新的<br>
Firefox，而且功能大大增强。<br>
最主要的作用还是在底部状态栏直接显示和操作下载项目。</p>
<p><a href="http://www.downthemall.net/"><strong>DownThemAll!</strong></a></p>
<p>多线程下载、过滤下载清单等定制功能仍然无与伦比。</p>
<p><a href="http://www.getfoxyproxy.org/"><strong>FoxyProxy</strong></a></p>
<p>可以自定义代理生效规则，支持地址白名单或黑名单列表，结合 Firefox<br>
的独立代理特性，堪称核心优势。</p>
<p><a href="http://bojanbabic.blogspot.com"><strong>Instaright!</strong></a></p>
<p>用于收藏页面内容到 Instapaper。<br>
虽然 Instapaper 被 Pocket 风头盖过，但 Instaright!<br>
最大的好处是可以保存选中的部分，而不是完全交给服务端解析页面的结果，对付一些<br>
Pocket 不能正常处理的页面有奇效。</p>
<p><a href="https://lastpass.com/"><strong>LastPass</strong></a></p>
<p>非常方便的密码统一管理工具，适合懒人。</p>
<p><a href="http://getlazarus.com/"><strong>Lazarus</strong></a></p>
<p>用于保存和恢复已经输入但没有提交的文本内容，多次挽救了不慎关闭浏览器或程序崩溃、死机时未写完的文字。</p>
<p><a href="http://www.one-tab.com/"><strong>OneTab</strong></a></p>
<p>概念像标签页群组书签和稍后阅读类服务，但只是保存页面链接清单到一个本地的标签页。<br>
好处是大大精简标签页，而且批量操作更加快捷方便，还能排除指定网页、锁定和明明标签页群组、导入导出、共享清单等等。</p>
<p><a href="https://getpocket.com/"><strong>Pocket</strong></a></p>
<p>前身是 Read It Later<br>
的稍后阅读类服务，跨平台和同步效率体验不错，后来居上超越了 Instapaper。</p>
<p><a href="https://github.com/traxium/tabtree"><strong>Tab Tree</strong></a></p>
<p>自从 Side Tabs 之后就习惯将标签页放置在左侧栏，但 Side Tabs<br>
已经停止更新并且有兼容问题，于是找到了功能更强的 Tab<br>
Tree，在侧栏显示标签页之外，还能显示标签页父子关系。</p>
<p><a href="https://tagpacker.com/"><strong>Tagpacker</strong></a></p>
<p><a href="http://calon.weblogs.us/zaijian_delicious_nihao_tagpacker/">之前有介绍过</a>，取代<br>
Delicious 的社交书签服务。</p>
<p><a href="https://github.com/akhodakivskiy/VimFx"><strong>VimFx</strong></a></p>
<p>如果嫌 Vimperator 等扩展太重，Vimkey<br>
等软件功能不够，可以用这个支持自定义快捷键的扩展。</p>
<p>Wapplyzer、Firebug、Hackbar 等适用性不广的扩展就不做介绍了。</p>
<p>2006年5月6日更新：</p>
<!-- raw HTML omitted -->
<p>虽然 <a href="https://addons.mozilla.org/firefox/10/">Adblock</a><br>
有导致内存泄漏的嫌疑，但功能如此强大，还是继续用好了。<br>
更新：目前基本不需要 Adblock 了，所以没有安装。</p>
<p>经常复制文字内容，既懒得老是按下 Ctrl+C，又不想像 UNIX<br>
命令行下那样选中即复制，那么选中之后会暂时弹出一个小菜单供你执行复制操作的<br>
<a href="https://addons.mozilla.org/firefox/addon/5714">Auto Context</a><br>
就是选择之一。</p>
<p><a href="http://www.cs.ucla.edu/~nikitas/acmanager/">Autocomplete Manager</a><br>
能够增强 Firefox 的地址栏的匹配功能，访问历史和书签的标题、 URL<br>
都可以模糊匹配，不过过渡到 Firefox 3之后，这个扩展的魅力值应该会下降了。</p>
<p>虽然 <a href="http://gneheix.googlepages.com/backword">Backword</a><br>
的即时翻译功能不是最强的，但是保存上下文用于复习的能力是其他扩展不具备的。</p>
<p>由于在 <a href="http://mail.google.com/mail">Gmail</a><br>
中标记已读经常误操作，所以用了集成很多脚本的 <a href="http://lifehacker.com/software/gmail/lifehacker-code-better-gmail-firefox-extension-251923.php">Better<br>
Gmail</a>，还有右键预览、附件图标、集成<br>
Google Reader 等多种功能。</p>
<h2 id="是共享软件啊所以还是用-chatzillahttpchatzillahacksruscom">询问 Windows 下的 IRC 客户端，回答都是 mIRC，可是 mIRC<br>
是共享软件啊…所以还是用 <a href="http://chatzilla.hacksrus.com/">ChatZilla!</a></h2>
<p>更新：目前非要用到 IRC 不可才把 ChatZilla! 激活。</p>
<p>经常复制链接就需要<br>
<a href="http://www.borngeek.com/firefox/colt/">CoLT</a>，自动配置格式，且可以自定义。</p>
<p><a href="http://www.diigo.com/">Diigo</a> 的专用扩展 <a href="http://www.diigo.com/diigoresources/downloads/diigotoolbar-firefox.xpi">Diigo<br>
Toolbar</a><br>
比 <a href="http://www.diigo.com/tools/diigolet">Diigolet</a><br>
书签按钮稍微好用一点。</p>
<p><a href="http://del.icio.us/help/firefox/extension">Del.icio.us 的官方扩展</a><br>
解决了页面跳转和搜索书签的问题，让 <a href="http://del.icio.us/">Del.icio.us</a><br>
变得更好用。</p>
<p><a href="http://downloadstatusbar.mozdev.org/">Download Status Bar</a><br>
解决了我打开下载清单窗口速度慢的烦恼，删除文件也更方便。</p>
<p><a href="http://www.downthemall.net/">DownThemAll!</a></p>
<p>号称 <a href="http://www.mozilla.org/products/firefox/">Firefox</a><br>
专用批量下载软件，大部分时候都能够取代<br>
Flashget，有时也会出现无法正常下载的问题，或者因为不方便更名、对中文支持不好而给用户造成困扰。</p>
<p>有时候还是需要靠拖动来节省时间的，比如快速搜索、在后台标签打开<br>
URL、图片等等，所以又用上了 <a href="https://addons.mozilla.org/firefox/2918/">Drag de<br>
Go</a>，花时间设置一下就挺好用了。</p>
<p><a href="http://www.lkozma.net/fisheyetabs/">FishEyeTabs</a><br>
的效果是，鼠标移动到标签上，标签就会自动展开，适合标签很多很拥挤的情况。不过初上手可能会有点不习惯。</p>
<p>用 <a href="http://flashblock.mozdev.org/">FlashBlock</a> 可以阻止下载未经允许的<br>
Flash 动画，页面一下子变得非常清静，而且还节约了系统资源。</p>
<p>一直很奇怪为什么 <a href="http://www.flashgot.net/">Flashgot</a> 总是名列 Firefox<br>
插件评分排行榜首位，可能因为现在我基本都不用常规手段下载文件了。前一阵子转用<br>
<a href="http://xoomer.virgilio.it/hherold/">Wget</a> 代替<br>
<a href="http://www.amazesoft.com/">Flashget</a> 和 <a href="http://www.xi-soft.com/">Net<br>
Transporter</a>，所以才安装了<br>
<a href="http://www.flashgot.net/">Flashgot</a>。<br>
更新：大部分时候使用 DownThemAll，偶尔用一用 Flashget/Wget，也就不必常备<br>
Flashgot 了。</p>
<p><a href="https://addons.mozilla.org/firefox/725/">FootieFox</a>，适合足球爱好者的扩展，自动读取当日欧洲足球比赛的比分信息，几乎是实时显示。前一段时间升级之后，改进了显示比分的方式，不用点开一场场比赛查看比分了。<br>
不足之处也很明显，例如只能够选择一个喜爱的队伍或赛事，不能够自定义屏蔽某些小联赛的信息，有的时候会漏比赛或比分等等。<br>
更新：右下角消息太多了，所以让它暂时下岗。</p>
<p>有时候 TOR 的速度比较慢，如果只要使用一般的网页代理，那么 [gladder**<br>
就够用了。</p>
<p>通过无穷尽的脚本使 Firefox 的功能有第二次扩展的机会，这就是<br>
<a href="http://greasemonkey.mozdev.org/">Greasemonkey</a>。安装之后请去<br>
<a href="http://userscripts.org/">UserScripts</a> 寻找中意的脚本。</p>
<p><a href="https://addons.mozilla.org/firefox/addon/4762">Hide Menubar</a><br>
用于隐藏菜单栏，是扩大可视面积，精简 Firefox 界面的好工具。<br>
有了 Personal Menu，这个就可以消失了。</p>
<p>遇到严重不符合标准而无法用 Firefox 正常打开的页面时，权宜之计是使用 <a href="http://ietab.mozdev.org/">IE<br>
Tab</a> 和 <a href="https://addons.mozilla.org/firefox/1429/">IE View<br>
Lite</a>。不过这样一来就更要注意安全问题了。<br>
更新：常用的网站基本都能够用 Firefox 正常浏览，所以不用 IE Tab 了。</p>
<p>遇到过大或者过小的图片就用 <a href="http://imagezoom.yellowgorilla.net/">Image<br>
Zoom</a> 来对付，有丰富的自定义选项。</p>
<p>我懒得手工填写表单，又不放心全部交给浏览器自动完成，所以<br>
<a href="http://informenter.mozdev.org/">InFormEnter</a><br>
挺适合我。可惜用来存储密码好像太不保险。</p>
<p>调用外部文本编辑器编辑页面文本框内容的 <a href="https://addons.mozilla.org/firefox/addon/4125">It&rsquo;s All<br>
Text!</a><br>
可以让你走到哪里都使用自己最爱的文本编辑器，同时还具有临时备份功能，防止文本丢失。</p>
<p>要完整地和长久地显示 Tooltip 提示信息，<a href="https://addons.mozilla.org/firefox/addon/1715">Long<br>
Titles</a> 才是王道。</p>
<p>如果你想依次看编号为1.jpg 至99.jpg<br>
的图片，既不想下载又懒得手工修改地址，怎么办？<br>
<a href="http://www.maxthon.com/">Maxthon</a> 利用插件可以实现，Firefox 利用<br>
<a href="http://nextplease.mozdev.org/">NextPlease!</a><br>
扩展同样可以实现，而且功能强大得多…<br>
更新：使用机会越来越少，移除了。</p>
<p><a href="http://www.opanda.com/en/iexif/iexif_firefox.htm">Opanda IExif for<br>
Firefox</a> 是查看图片<br>
Exif 信息的好帮手。</p>
<p>精简合并菜单可以使用 <a href="https://addons.mozilla.org/firefox/addon/3895">Personal<br>
Menu</a>，留下常用的菜单项，其他的统统去死！</p>
<p><a href="http://labs.mozilla.com/2007/12/personas-for-firefox/">Personas</a><br>
是轻量级的主题方案，好处是不用重启就可以更换，缺点是只能更换工具栏、状态栏的背景配色和图片，而且目前好看的主题不多，仅有<br>
Viva Firefox 这一款还不错。</p>
<p>截取页面图片目前应该是 <a href="http://pearlcrescent.com/products/pagesaver/">Pearl Crescent Page<br>
Saver</a><br>
最棒。<a href="http://winsoncafe.blogspot.com/">Winson</a> 曾经推荐过 <a href="http://andy.5263.org/?page_id=5">Screen<br>
Grab!</a>，虽然可以截取框架图像，但需要<br>
Java VM…<br>
更新：很少用到，暂时禁用。</p>
<p><a href="https://addons.mozilla.org/firefox/614/">Save Image in<br>
Folder</a>，如果经常保存大量图片到不同的目录，感觉来回切换目录挺烦人，那么这个扩展就很有用，否则的话不必试了。<br>
更新：很少用到，移除了。</p>
<p>为了方便的重新启动 Firefox，于是用上了 <a href="https://addons.mozilla.org/firefox/addon/4199">Save<br>
Session</a>，重启之后能够恢复上一次打开的页面。</p>
<p><a href="https://addons.mozilla.org/firefox/427/">ScrapBook</a>，保存网页到本地的扩展。虽然有了<a href="http://www.diigo.com/">Diigo</a>、<a href="http://del.icio.us/">Del.icio.us</a><br>
等在线的收藏服务，但本地收藏还是需要的，而且还能够用于在线编辑时做临时存档用。这个扩展在保存时可同时获取指定类型的链接目标，如图像、声音、压缩文件等，可以自定义的选项比较丰富。</p>
<p>裸奔版 Firefox 中如果图片载入失败只好刷新整个页面，很不方便，好在还有<br>
<a href="https://addons.mozilla.org/firefox/addon/3664">Show Picture</a>。</p>
<p><a href="https://addons.mozilla.org/firefox/addon/1272">Status Buttons</a><br>
用于将工具栏的按钮拖到状态栏上，可以为地址栏腾出更多的空间。</p>
<p>因为实在忍受不了一些人的页面内嵌自动播放，所以不得已安装了 <a href="http://hemiolapei.free.fr/divers/sap/sap-en.html">Stop<br>
Autoplay</a>。</p>
<p><a href="https://addons.mozilla.org/firefox/2108/">Stylish</a> 是一个和<br>
<a href="http://greasemonkey.mozdev.org/">Greasemonkey</a><br>
相近的插件，主要用来改变网页和浏览器的界面。在<br>
<a href="http://userstyles.org/stylish/">UserStyles</a> 可以下载脚本，如 <a href="http://userstyles.org/style/show/826">Icon<br>
identifiers for links redux</a>。<br>
更新：应用不够 Greasemonkey 广泛，暂时禁用。</p>
<p>升级 Firefox 到1.5之后 <a href="https://addons.mozilla.org/firefox/137/">Super<br>
DragAndGo</a><br>
的页面一直说版本不对，不能更新，好在 <a href="http://mozillaupdate.mozine.org/">Mozilla Update<br>
中国</a>有<a href="http://addons.mozine.org/firefox/26/">适合 1.5.x<br>
的版本</a>可以用。<br>
更新：很少用到，移除了。</p>
<p>有了 <a href="https://addons.mozilla.org/firefox/1122/">Tab Mix<br>
Plus</a>，就可以彻底告别<br>
<a href="https://addons.mozilla.org/firefox/158/">Tabbrowser<br>
Preferences</a>/<a href="http://piro.sakura.ne.jp/xul/tabextensions/index.html.en">Tabbrowser<br>
Extensions</a>。拖拽<br>
URL 到标签栏，可以在新标签页中打开，代替了部分 <a href="http://addons.mozine.org/firefox/26/">Super<br>
DragAndGo</a> 的功能。<br>
如果不需要那么强大的功能的话，<a href="http://addons.mozine.cn/firefox/54/">Tab Mix Lite<br>
CE</a> 也可以了。</p>
<p>由于常用 Twitter，所以安装 <a href="https://addons.mozilla.org/firefox/addon/126">TinyUrl<br>
Creator</a><br>
进行配合，更加方便地缩短过长的 URL 。</p>
<p>使用 <a href="http://freehaven.net/~squires/torbutton/">Torbutton</a> 配合 Tor<br>
突破网络封锁。</p>
<p>使用 <a href="http://javimoya.com/blog/youtube_en.php">VideoDownloader</a> 下载<br>
Youtube<br>
等视频站点上的视频，更主要的原因是使用多线程下载的话速度会快一点。</p>
<h2 id="developerhttpsaddonsmozillaorgfirefox60安装之后功能太多谨防弄花眼">编写网页者必备利器 <a href="https://addons.mozilla.org/firefox/60/">Web<br>
Developer</a>。安装之后功能太多，谨防弄花眼</h2>
<p>更新：编辑网页时才用到，暂时禁用。</p>
<p>再次提到 <a href="http://xyzboard.com/">xyzproxy</a>，比 <a href="https://addons.mozilla.org/firefox/125/">SwitchProxy<br>
Tool</a> 方便易用且 bug 少。<br>
更新：试用了 Torbutton 之后就禁用了这个。</p>
<p><strong>主题</strong></p>
<p>2016年5月21日更新：</p>
<p>因为尽量精简了 Firefox 界面，因此基本没有使用主题了。</p>
<p>2006年5月6日更新：</p>
<p><a href="http://calon.blogsome.com/2005/02/20/zuijin_shiyong_de_firefox_zhuti/">之前介绍</a>了<br>
<a href="https://addons.mozilla.org/firefox/454/">SomeOrbitYellow</a>、<a href="https://addons.mozilla.org/firefox/414/">Saferfox<br>
Xpanded</a> 和 <a href="https://addons.mozilla.org/firefox/1149/">Plastikfox Crystal<br>
SVG</a><br>
几个主题，后来改为下面几个：</p>
<p><a href="https://addons.mozilla.org/firefox/2702/">Geek</a><br>
主题很简洁，但已经不支持新版本 Firefox。已经卸载。</p>
<p><a href="https://addons.mozilla.org/firefox/548/">Brushed</a>，借鉴 Apple Mac OS X<br>
Brushed Metal 的主题，若没有大片空白，视觉效果还是不错的。<br>
更新：细节不够好，已经卸载。</p>
<p>顾名思义，<a href="https://addons.mozilla.org/firefox/addon/3774">GNOME Firefox<br>
Theme</a> 是仿 Gnome<br>
风格的主题，蓝色的风格更好看一点。</p>
<p><a href="https://addons.mozilla.org/firefox/addon/6161">hmmXP</a> 主题基于 <a href="http://fugacious.deviantart.com/art/HmmXP-2-0-1-5514034">HmmXP<br>
Visual Style</a><br>
主题，非常简单的风格，但是很耐看。</p>
<p><a href="https://addons.mozilla.org/firefox/1106/">iFox</a>，又一款借鉴 Apple Mac<br>
OS X Aqua 风格的主题。<br>
更新：“转到”按钮太小，已经卸载。</p>
<p><a href="http://mozilla-themes.schellen.net/firefox.html">Modern<br>
Pinball</a>，它的按钮让我联想到了复印机等办公设备上可爱的设计…</p>
<p><a href="http://www.tom-cat.com/mozilla/">Mostly Crystal</a>，图标源于 Crystal<br>
SVG。<br>
本来是打算在 <a href="http://www.mozilla.com/thunderbird/">Thunderbird</a><br>
也用同风格主题的，虽然比华丽有余的 <a href="https://addons.mozilla.org/thunderbird/1713/">Tiger<br>
Mail</a><br>
要好，但却比不上很耐看的<br>
<a href="https://addons.mozilla.org/thunderbird/665/">CrossOver</a>，反正用上后者之后就不打算更换了。</p>
<p>顾名思义，<a href="https://addons.mozilla.org/firefox/1587/">Mozilla.org</a><br>
这个主题就是使用的 <a href="http://www.mozilla.org/">Mozilla.org</a> 站点的风格。<br>
更新：细节做得不够好，已经禁用。</p>
<p><a href="https://addons.mozilla.org/firefox/addon/3471">Netscape Windows 3.1</a><br>
适合怀旧的人使用，Windows 3.1 + Netscape，别有一种原始粗犷的美…</p>
<p>仿 Ubuntu Human 风格的一款主体 <a href="https://addons.mozilla.org/firefox/addon/3008">Ubuntu Human<br>
Theme</a>，如果用过 Ubuntu<br>
应该会感到比较亲切吧。</p>
<p><a href="https://addons.mozilla.org/firefox/3008/">Whitehart</a> 既有 Firefox 也有<br>
Thunderbird 版本，风格简洁，自定义选项多，目前是我的 Firefox 首选主题。<br>
<!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
