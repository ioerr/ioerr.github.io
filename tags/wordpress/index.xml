<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wordpress on 读写错误</title>
    <link>https://ioerr.github.io/tags/wordpress/index.xml</link>
    <description>Recent content in Wordpress on 读写错误</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>calon.xu@gmail.com (Calon)</managingEditor>
    <webMaster>calon.xu@gmail.com (Calon)</webMaster>
    <atom:link href="https://ioerr.github.io/tags/wordpress/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>最简便的内容发布方案</title>
      <link>https://ioerr.github.io/zui-jianbian-de-neirong-fabu-fangan/</link>
      <pubDate>Mon, 10 Feb 2014 16:13:52 +0000</pubDate>
      <author>calon.xu@gmail.com (Calon)</author>
      <guid>https://ioerr.github.io/zui-jianbian-de-neirong-fabu-fangan/</guid>
      <description>

&lt;p&gt;宣传、推广 Markdown
标记语言和协作工具的人往往强调其可读、易修改、文件格式通用的优点，但是对互联网上的写作者来说，「写」只是第一步，「发布」和「维护」还有许多优化的事情可做。&lt;/p&gt;

&lt;p&gt;比如说我们使用 &lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress&lt;/a&gt;
发布文章，至少要有这么几步：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;登录（假设自动登录并直接跳转到发布页面）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;编辑标题（可以省略，但严肃的作者通常不会忽视标题）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;撰写正文（或复制粘贴已经准备好的内容）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;发布（如果不放心还要打开文章页面看看效果）&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这还不包括选择类别、增加标签、设置 post slug 等操作。&lt;/p&gt;

&lt;h3 id=&#34;邮件发布&#34;&gt;邮件发布&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress&lt;/a&gt; 的 &lt;a href=&#34;http://jetpack.me/&#34;&gt;Jetpack&lt;/a&gt;
插件包中有 &lt;a href=&#34;http://jetpack.me/support/post-by-email/&#34;&gt;Post By Email&lt;/a&gt;
功能，&lt;a href=&#34;http://www.tumblr.com/&#34;&gt;Tumblr&lt;/a&gt;
等一早就支持邮件发布，好处是自动备份，不用额外客户端，不需要登录网站。&lt;br /&gt;
如果习惯邮件发布的话，&lt;a href=&#34;http://jetpack.me/&#34;&gt;Jetpack&lt;/a&gt;
是不错的选择，因为能支持大多数参数设置。&lt;br /&gt;
不过使用邮件发布的用户始终是少数。&lt;/p&gt;

&lt;h3 id=&#34;编辑&#34;&gt;编辑&lt;/h3&gt;

&lt;p&gt;要是文章发布后不满意又要修改呢？还是至少要经过以下步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;登录&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;跳转到所有文章列表&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;定位到要修改的文章&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改正文（或者复制粘贴已经修改好的内容）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;发布更新&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;如果保持登录状态，在文章阅读界面也可以直接进入编辑界面，但也只是将上述步骤调换了顺序而已。&lt;/p&gt;

&lt;p&gt;如果网站的编辑功能还不够完善呢？&lt;br /&gt;
比如说不支持更好用的 [Markdown]
扩展语法，或者更习惯本地编辑器的丰富功能，如版本管理、本地备份、语法高亮、快捷键……&lt;br /&gt;
在本地编辑界面和网页发布界面就得切换一下了，要么就得找足够好用的发布服务客户端，比如曾经很流行的
&lt;a href=&#34;http://www.microsoft.com/en-us/download/details.aspx?id=8621&#34;&gt;Windows Live
Writer&lt;/a&gt;、&lt;a href=&#34;http://www.zoundry.com/download.html&#34;&gt;Zoundry
Raven&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;内容迁移&#34;&gt;内容迁移&lt;/h3&gt;

&lt;p&gt;如果还考虑内容迁移呢？&lt;br /&gt;
后台不同的导出、格式转换、导入有多麻烦就不说了（当年汉字编码的转换就害死不少人），很多内容发布平台根本就不提供完整的导入、导出功能，而且导出来的也许是各种不好读的格式。&lt;/p&gt;

&lt;h3 id=&#34;理想方案&#34;&gt;理想方案&lt;/h3&gt;

&lt;p&gt;有没有一个服务能结合
&lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt;/&lt;a href=&#34;https://www.box.com/&#34;&gt;Box&lt;/a&gt; +
&lt;a href=&#34;https://github.com/&#34;&gt;Github&lt;/a&gt;/&lt;a href=&#34;https://readthedocs.org/&#34;&gt;Read the Docs&lt;/a&gt;
并继续扩展呢？&lt;/p&gt;

&lt;p&gt;写文章在本地保存文档就好了，和平时写作完全没有两样，爱用什么顺手的本地编辑器就用什么；&lt;br /&gt;
格式也没有特殊要求，无任何特殊标记的纯文字，Markdown/txt2tags/reStructuredText等等，HTML/RTF/Word
Docs 都适用；&lt;br /&gt;
写完了复制到某个指定文件夹就是发布，这个文件夹类似于
&lt;a href=&#34;https://www.dropbox.com/&#34;&gt;Dropbox&lt;/a&gt;/&lt;a href=&#34;https://www.box.com/&#34;&gt;Box&lt;/a&gt;
的同步目录，自动上传并转换为服务网站上的静态页面发布，同时在本地目录中生成相应的静态网页文件用于预览；&lt;br /&gt;
标题就是文件名，post slug 在文件名中的括号中指定，或者参考
&lt;a href=&#34;http://jetpack.me/support/post-by-email/&#34;&gt;Jetpack&lt;/a&gt; 的标签参数；&lt;br /&gt;
修改也简单，直接在本地编辑发布目录中的文件，后续的更新发布不用手工操作；&lt;br /&gt;
要是有人留言评论，也会自动在本地目录中生成后缀名为 .comment
的超文本或文本格式文件，其中就是留言内容。&lt;/p&gt;

&lt;p&gt;这样，写作者只要操心写文章，发布是一个复制操作就能搞定的事情，内容备份什么的与日常普通的文件备份管理统一，与内容发布服务无关。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Minimore</title>
      <link>https://ioerr.github.io/minimore/</link>
      <pubDate>Fri, 02 Aug 2013 17:10:16 +0000</pubDate>
      <author>calon.xu@gmail.com (Calon)</author>
      <guid>https://ioerr.github.io/minimore/</guid>
      <description>&lt;p&gt;抽空改了个极简风格的主题 &lt;a href=&#34;http://mnmlist.com/theme&#34;&gt;mnmlist&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;原主题：mnmlist v1&lt;br /&gt;
原作者： Leo Babauta&lt;br /&gt;
原作者地址： &lt;a href=&#34;http://mnmlist.com&#34;&gt;http://mnmlist.com&lt;/a&lt;br /&gt;
原作主题地址： &lt;a href=&#34;http://mnmlist.com/theme&#34;&gt;http://mnmlist.com/theme&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;修改主题：minimore&lt;br /&gt;
修改者：Calon&lt;br /&gt;
修改者blog地址：&lt;a href=&#34;http://calon.weblogs.us/&#34;&gt;http://calon.weblogs.us/&lt;/a&lt;br /&gt;
修改主题地址：&lt;a href=&#34;http://calon.weblogs.us/minimore&#34;&gt;http://calon.weblogs.us/minimore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原作主题 mnmlist 以突出内容的最精简主题为目标，没有 widgets
小工具，没有评论，没有搜索功能，没有可以动态调整的侧栏，等等。&lt;/p&gt;

&lt;p&gt;因为第三版太激进，所以我选择第一版为改造对象。&lt;br /&gt;
我的目标是最大程度去除各种装饰，突出内容，改造成适合自己的风格，但不必精简到影响作者和读者的使用，于是我还是将原作去除的各类功能加回来了（所以名字带个
more），而且没有采用固定宽度。&lt;br /&gt;
如果不想要这些功能的话，直接上原主题或自己改造就好。&lt;/p&gt;

&lt;p&gt;Blockquote 的风格是借鉴 Medium 的。&lt;br /&gt;
Font-family 采用优先雅黑和
Arial，最终回落到非衬线字体的方案，在保证基本可读性的基础上，最大程度尊重各操作系统用户指定字体的自由。如果对雅黑不满意，就在浏览器中指定最合适自己的非衬线字体吧。&lt;/p&gt;

&lt;p&gt;因为我自己是用 Disqus
评论系统，所以没充分测试评论功能，有问题请留言反馈。我暂时禁用 Disqus
插件是可以正常显示的。&lt;/p&gt;

&lt;p&gt;为了能够通过验证上传到 WordPress 主题站，不得不忍痛增加了一些内容……&lt;/p&gt;

&lt;p&gt;不算说明文档和截图的话，整个主题共10个文件，11.3KB大小。&lt;/p&gt;

&lt;p&gt;安装说明&lt;br /&gt;
将文件夹上传到 wp-content/themes/ 文件夹下，在 WordPress
管理后台的主题板块中激活即可。&lt;/p&gt;

&lt;p&gt;版权声明&lt;br /&gt;
原主题声明无版权（uncopyrighted），复制、分发、修改都无需先获得原作者认可，修改者可以自己指定新的版权协议（这也是我选择修改和使用这款主题的原因）。&lt;br /&gt;
那我也指定使用 &lt;a href=&#34;http://www.wtfpl.net/&#34;&gt;WTFPL&lt;/a&gt;（Do What The Fuck You Want
To Public License，你他妈的想干嘛就干嘛公共许可证 ）好了，借用
twenty-thirteen 主题的 comments.php 除外。&lt;/p&gt;

&lt;p&gt;效果截图：&lt;br /&gt;
&lt;a href=&#34;http://s111.photobucket.com/user/calon_plus/media/screenshot_small-1.png.html&#34;&gt;&lt;img src=&#34;http://i111.photobucket.com/albums/n154/calon_plus/screenshot_small-1.png&#34; alt=&#34;photo
screenshot\_small-1.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;下载地址：&lt;br /&gt;
&lt;a href=&#34;https://app.box.com/s/45domoq1nf2rrdf03wmx&#34;&gt;Box&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://github.com/calon/minimore/archive/master.zip&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TagThis</title>
      <link>https://ioerr.github.io/tagthis/</link>
      <pubDate>Sat, 23 Feb 2008 17:03:58 +0000</pubDate>
      <author>calon.xu@gmail.com (Calon)</author>
      <guid>https://ioerr.github.io/tagthis/</guid>
      <description>&lt;p&gt;因为是半路启用标签功能，所以以前的许多文章都没有打上标签，懒得自己一个个加标签，所以装上了这个“&lt;a href=&#34;http://www.brajeshwar.com/2008/tagthis-wordpress-plugin/&#34;&gt;TagThis&lt;/a&gt;”插件。&lt;/p&gt;

&lt;p&gt;目前提交的标签要经过手工审核才会显示。&lt;br /&gt;
估计添加标签的人不会很多，所以同样的标签只要用户提交一次就会出现在页面中（推荐设置是2－5次）。&lt;/p&gt;

&lt;p&gt;原插件的脚本和 Style 感觉比较马虎，在 IE
中可能十分难看，作者自己的页面上都有难看的大片空白…所以自己稍微改了一下，反正懒得调整控制显隐的脚本，干脆就删掉了一部分…&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>准备升级到 WP 2.3</title>
      <link>https://ioerr.github.io/zhunbei-shengji-dao-wp-23/</link>
      <pubDate>Tue, 25 Sep 2007 14:33:27 +0000</pubDate>
      <author>calon.xu@gmail.com (Calon)</author>
      <guid>https://ioerr.github.io/zhunbei-shengji-dao-wp-23/</guid>
      <description>&lt;p&gt;打算把“滞销书”&lt;a href=&#34;http://codex.wordpress.org/Upgrading_WordPress&#34;&gt;升级&lt;/a&gt;到
&lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress&lt;/a&gt; 2.3 版本，如果这几天 blog
无法访问，说明正在升级，或者升级失败，或者恢复失败…&lt;br /&gt;
主题可能会暂时使用原版默认主题，RSS Feed 也可能出现异常状况。&lt;/p&gt;

&lt;p&gt;升级步骤参考&lt;a href=&#34;http://calon.weblogs.us/zhunbei_shengji_wordpress_2/&#34;&gt;以前的文章&lt;/a&gt;修改而成：&lt;/p&gt;

&lt;p&gt;1、备份数据库。&lt;br /&gt;
使用 &lt;a href=&#34;http://www.skippy.net/blog/plugins/&#34;&gt;Database Backup&lt;/a&gt;
插件导出数据库表。&lt;/p&gt;

&lt;p&gt;2、备份文件。&lt;br /&gt;
由于本地连接 FTP 速度较慢，因此打算使用移动文件到 FTP
备份目录的方式，但愿不要出问题…&lt;br /&gt;
之前也有做本地备份，应该不至于太危险。&lt;/p&gt;

&lt;p&gt;3、停用所有的插件。&lt;br /&gt;
&lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress&lt;/a&gt;
2.3的插件管理有了进步，不会因为某个插件不兼容问题导致整站瘫痪，所以可以跳过这一步。实在不放心就停用吧。&lt;/p&gt;

&lt;p&gt;4、下载并上传 &lt;a href=&#34;http://wordpress.org/&#34;&gt;WordPress&lt;/a&gt; 2.3 文件。&lt;br /&gt;
这里是&lt;a href=&#34;http://wordpress.org/download/&#34;&gt;下载地址&lt;/a&gt;，已经上传到了指定目录，目前是
/WP/wordpress-2.3。&lt;/p&gt;

&lt;p&gt;5、移走旧文件。&lt;br /&gt;
保留的文件：wp-config.php、.htaccess、favicon.ico 文件。&lt;br /&gt;
移动剩下的文件到指定的备份目录，目前是 /WP/bak_2.2.1。&lt;/p&gt;

&lt;p&gt;6、移动新文件。&lt;br /&gt;
将 /WP/wordpress-2.3的文件移动到根目录/下。&lt;/p&gt;

&lt;p&gt;7、执行 wp-admin/upgrade.php。&lt;br /&gt;
然后就看人品是否过硬了。&lt;br /&gt;
升级完之后删除或改名 upgrade.php 和 install.php。&lt;/p&gt;

&lt;p&gt;8、根据已经修改过的旧文件修改新版本的对应文件。&lt;br /&gt;
目前能够想到的有：&lt;br /&gt;
所有的表情文件；&lt;br /&gt;
所有的插件；&lt;br /&gt;
/wp-includes/vars.php&lt;br /&gt;
default 主题的
comments.php、footer.php、header.php、index.php、sidebar.php、single.php、style.css；&lt;br /&gt;
default
主题的自定义按钮图片、blockquote.png、BtnClosed.gif、BtnOpen.gif、crowheader_new.jpg（要改为默认的名字）；&lt;br /&gt;
更新 veryplaintxt 主题；&lt;br /&gt;
根据原来的文件修改 comments.php、header.php、style.css；&lt;br /&gt;
新增的页面模板文件。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>